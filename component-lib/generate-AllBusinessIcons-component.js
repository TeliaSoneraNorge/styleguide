const fs = require('fs');

const rawSvg = fs.readFileSync('./assets/business-allicons/business-allicons.svg', 'utf8');
const template = fs.readFileSync('./src/business/Icon/AllBusinessIcons.tsx.template', 'utf8');

// Find all current icon IDs to make sure the TS IconDefinition type
// and Storybook is consistent with the current selection of icons.
// We search for each `<symbol id="lorem-ipsum"` in the raw svg.

const symbolIdRx = /<symbol[^>]+id="([A-Za-z-_0-9]+)"/g;
const availableIconIds = [];
let match;
while ((match = symbolIdRx.exec(rawSvg))) {
  availableIconIds.push(match[1]);
}
availableIconIds.sort();

let reactComponent = template
  .replace('[ALL_ICONS_SVG_MARKUP]', rawSvg)
  .replace(/<symbol/gi, '        <symbol')
  .replace(/<\/svg/gi, '    </svg');

const header = `//
// WARNING
//
// Do not make manual changes to this file.
// This file was generated by generate-AllBusinessIcons-component.js.
//
//

`;

const iconDefinition = [
  header,
  `export type IconDefinition =\n`,
  availableIconIds.map(id => `  | '${id}'`).join('\n'),
  `;\n`,
].join('');

const availableIcons = [
  header,
  `import { IconDefinition } from './IconDefinition';\n`,
  `\n`,
  `export const availableIcons: IconDefinition[] = [\n`,
  availableIconIds.map(id => `  '${id}',\n`).join(''),
  '];\n',
].join('');

fs.writeFileSync('./src/business/Icon/IconDefinition.ts', iconDefinition);
fs.writeFileSync('./src/business/Icon/availableIcons.ts', availableIcons);
fs.writeFileSync('./src/business/Icon/AllBusinessIcons.tsx', reactComponent);
